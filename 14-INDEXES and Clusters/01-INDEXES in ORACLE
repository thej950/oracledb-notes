INDEXES in ORACLE
------------------
	- Use indexes to speed up queries 
	- indexes are speed up searching of any informations in tables 
	- so here create indexes on those columns which are frequently used in WHERE conditions 
	- indexes are helpful of the operations return only small portion of data i.e less thatn 15% of data is retrieved from tables 

	Follow Below Guidelines For creating Indexes 
	---------------------------------------------
		- Do not create indexes on small tables i.e where number of rows are less (full table scan itself will be faster if table is small )
		- Do not create indexex where columns may containe many Null values 
		- Do not create BTree indexes on those columns which may containe many repeated values In this case create BITMAP indexes on these columns 
		- Limit the number of indexes on table because, although they speed up queries, but at the same time DML operations become very slow as all the indexes have to updated whenever an update, Delete or Insert takes place on tables 

		1. Create index statement
			- To create a new index for a table, you use the CREATE INDEX statement as follows 

				CREATE INDEX index_name
				ON table_name(column_1[,column_2,....])

		2. Removing Indexes 
			- To Remove an index, you can use the DROP INDEX statement

				DROP INDEX index_name;

		3. UNIQUE index
			- An index can be inique or non unique 
			- A unique index ensures that no two rows of a table have Duplicate values in the indexed column (or columns )
			- A Non-Unique index does not impose tis restriction on the indexed columns values

				CREATE UNIQUE INDEX index_name ON 
				table_name (column_1[,column_2,...]);

		4. Suppose The member table has a primary key column, therefore,member_id Oracle craeted a new index for this column 
		- To view all indexes of a table, you query from the table all_indexes view

			SELECT index_name,index_type,visibility,status
			FROM all_indexes 
			WHERE table_name = 'MEMBERS';



				SQL> select index_name,index_type,visibility,status
				  2  from all_indexes
				  3  where table_name = 'DEPT';

				INDEX_NAME
				--------------------------------------------------------------------------------
				INDEX_TYPE                  VISIBILIT STATUS
				--------------------------- --------- --------
				SYS_C007495
				NORMAL                      VISIBLE   VALID

				SYS_C007547
				NORMAL                      VISIBLE   VALID


				SQL>
		- from above output table will automatcally created it 
		- lets create index table here


			SQL> create table members(
			  2     member_id INT GENERATED BY DEFAULT AS IDENTITY,
			  3     first_name VARCHAR2(100) NOT NULL,
			  4     last_name VARCHAR2(100) NOT NULL,
			  5     gender CHAR(1) NOT NULL,
			  6     dob DATE NOT NULL,
			  7     email VARCHAR2(255) NOT NULL,
			  8     PRIMARY KEY (member_id)
			  9  );

			Table created.

			SQL>

			- lets check members table of indexs

				SQL> select index_name,index_type,visibility,status
				  2  from all_indexes
				  3  where table_name = 'MEMBERS';

				INDEX_NAME
				--------------------------------------------------------------------------------
				INDEX_TYPE                  VISIBILIT STATUS
				--------------------------- --------- --------
				SYS_C007573
				NORMAL                      VISIBLE   VALID


				SQL>
			 - lets create index on members table 


				SQL> create index  idx1 on members(first_name);

				Index created.

				SQL> select index_name,index_type,visibility,status
				  2  from all_indexes
				  3  where table_name = 'MEMBERS';

				INDEX_NAME
				--------------------------------------------------------------------------------
				INDEX_TYPE                  VISIBILIT STATUS
				--------------------------- --------- --------
				SYS_C007573
				NORMAL                      VISIBLE   VALID

				IDX1
				NORMAL                      VISIBLE   VALID


				SQL>
				 - we added to column first_name we add idx1 

	Example:
		1. create a index for one column

			CREATE INDEX members_last_name_i
			ON members(last_name);

		2. To Drop index

			CREATE INDEX members_name_i;

		3. create a index on multiple columns 

			CREATE INDEX members_nanme_i
			ON members(last_name,firts_name);

		4. For Unique index 

			CREATE INDEX members_email_i
			ON members(email);


		- By having this members_email_i index, you cannot have two rows with the same value in the email column 
		- the following statement will fail because it attemts to insert a new row whose email already exists 




