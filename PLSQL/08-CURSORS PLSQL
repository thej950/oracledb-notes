CURSORS PLSQL
--------------
 - A cursor is a temporary work area created in the system memory when sql statement is excuted 
 - A cursor containe information on select statement and rows of data accessed by it 
 - This temporary work area is used to store the data retrived from the database and manipulate this data 
 - A cursor can hold more than one row but it can process only one row at a time 
 - The set of rows the cursor holds is called active set 

 There are Two types of cursor in PLSQL
 ---------------------------------------
  1. IMPLICIT CURSOR
  2. EXPLICIT CURSOR

  1. PLSQL IMPLICIT CURSOR
  	- The implicit cursors are automatically generated by Oracle while an SQL statement is excuted if we dont use explicit cursors for the statement 
  	- Implicit cursors are default cursors these are performed while excuting DML statements like INSERT, UPDATE, DELETE, etc... 
  	- Here Oracle Provide some attributes For Known as IMPLICIT
  	- These attributes will check the status of DML operations 
  	- Below  are few attrubutes 
  		- %FOUND
  		- %NOTFOUND
  		- %ROWCOUNT
  		- %ISOPEN

  	lets see attributes with Descriptions Below
  	--------------------------------------------
  	1. %FOUND
  		- This attribute returns value is TRUE if DML statement affect at least one row or more rows 
  		- select into statement return one or more rows otherwise it returns false 

  	2. %NOTFOUND
  		- it returns value is TRUE if DML statements affect or returns no row
  		- select into statement no rows otherwise it returns false it is a just a opposite of %FOUND

  	3. %ISOPEN
  		- it will always returns FALSE because implicit cursor will close after excuting sql statements 

  	4. %ROWCOUNT
  		- it returns the number of rows by help of DML statemnts 
  			or
  		- Returnes rows by a select into statement


	  Example of IMPLICIT cursor
	  ----------------------------
	   SQL>edit file1
	   --------------------------------------------
	    declare 
	    rcount number(2);
	    begin
	     update employee set sal=sal+1000 where deptno=20;

	     if sql%notfound then
	      dbms_output.put_line('no records found to update');
	      else
	      rcount:=sql%rowcount;
	      dbms_output.put_line('records found to update are... '||rcount);
	     end if;
	    end;
	    --------------------------------------------------
	     -> From above file we are performing to update employee table adding 1000 extra salary who is from department 20 

  2. PLSQL EXPLICIT CURSORS
  ---------------------------
  	- These EXPLICIT Cursors are defined by the programmers to gain more control over the context area 
  	- Thses cursors sould be defined in the declaration on the section of the PLSQL block 
  	- it is created on select statement which returns more than one row 

  		Process for Explicit cursors
  		------------------------------

  			DECLARE---->OPEN---->FETCH---->EMPTY---->CLOSE 

  		steps for while working with EXPLICIT cursor
  		-----------------------------------------------
  		  1. Declare the cursor to initialize in the memory
  		  2. open the cursor to allocate memory 
  		  3. fetch the cursor to retrive the data
  		  4. close the cursor to release allocated memory 

  		  1. DECLARE the CURSOR
  		   - it defines the cursor with name and associated select statement 
  		   syntax:
  		    CURSOR name IS SELECT <statement>;

  		  2. OPEN THE CURSOR
  		   - it is used to allocate memory for the cursor and make it easy to fetch the rows returned by sql statements into it 
  		   syntax:
  		    OPEN cursor_name

  		  3. FETCH THE CURSOR
  		   - it is used to access the row at a time you can fetch the rows from the above opened cursor as follows 
  		   syntax:
  		    FETCH cursor_name INTO variable_list;

  		  4. CLOSE THE CURSOR
  		   - it is used to release allocated memory the followig syntax used to close the above opened cursor
  		   syntax:
  		    CLOSE curname_name;

  	Example for EXPLICIT CURSORS
  	-------------------------------
  	 SQL>edit file2
  	 --------------------------------------
  	  DECLARE 
  	   e_no employee.empno%type;
  	   e_name employee.ename%type;
  	   e_sal employee.sal%type;

  	   CURSOR c_emp IS SELECT empno,ename,sal FROM employee;

  	    BEGIN
  	    	OPEN c_emp;
  	    		LOOP
  	     			FETCH c_emp INTO e_no,ename,e_sal;
  	      			EXIT when c_emp%notfound;
  	      			dbms_output.put_line('EMPNO = '||e_no|| 'ENAME = ' ||e_name|| 'SALARY = ' ||e_sal ); 
  	    		END LOOP;
  	    	CLOSE c_emp;
  	    END
  	    /
  	 ---------------------------------------------------------
  	  -> from above file we able to perform explicit cursor for get data from employee table
  	  - for columns employee number and employee name and salary 

  	SQL>edit file3
  	---------------------------------------------
  	 DECLARE
  	 	e_no employee.empno%type;
  	 	e_name employee.ename%type;
  	 	e_sal employee.sal%type;

  	 	CURSOR c_emp is select empno,ename,sal from employee;

  	 BEGIN
  	 	OPEN c_emp
  	 		LOOP
  	 			FETCH c_emp into e_no,e_name,e_sal;
  	 			EXIT WHEN c_emp%notfound;
  	 			dbms_output.put_line('EMPNO='||e_no||' ENAME='||e_name||' SALARY=' ||e_sal);

  	 			if e_sal>=5000 then
  	 			update employee set comm=comm+500 where empno=e_no;
  	 			elseif e_sal>=3000 then
  	 			update employee set comm=comm+300 where empno=e_no;
  	 			else
  	 			update employee set comm=comm+100 where empno=e_no;
  	 			end if;
  	 		END LOOP;

  	 		CLOSE c_emp;
  	 	END;
  	 	/
  	----------------------------------------------------------------


  SQL> edit file3
  -----------------------------------------------------------------------------
   DECLARE

   		e_no employee.empno%type;
   		e_name employee.ename%type;
   		e_sal employee.sal%type;
   		e_comm employee.comm%type;
   		CURSOR c_emp is select empno,ename,sal,comm from employee;

   	BEGIN

   		OPEN c_emp;
   		LOOP
   			FETCH c_emp into e_no,e_name,e_sal,e_comm;
   			EXIT WHEN c_emp%notfound;
   			dbms_output.put_line('EMPNO='||e_no||' ENAME='||e_name||' SALARY=' ||e_sal);

   			if e_sal>=5000 then 
   			update employee set comm=comm+500 where empno=e_no;
   			elseif e_sal>=3000 then 
   			update employee set comm=comm+100 where empno=e_no;
   			else
   			update employee set comm=comm+100 where empno=e_no;
   			end if;

   		END LOOP;

   		CLOSE c_emp;

   	END;
   	/
   ---------------------------------------------------------------------------


CURSOR FOR LOOP
---------------
 - when using for loop there is not require to declare variable for  loop to store cursor values and need to to open fetch and close cursor 
 - these functions are accomplised by using for loop automatically 

 Syntax:
 	FOR record_name IN cursor_name
 	LOOP
 		process the row .....
 	END LOOP;

 SQL>edit file4
 ---------------------------------------------------
  DECLARE 
  CURSOR emp_cur IS SELECT ename,job,sal FROM employee;
  emp_rec emp_cur%rowtype;

  BEGIN
  	FOR emp_rec IN emp_cur

  	LOOP

  	dbms_output.put_line(emp_rec.ename||' '||emp_rec.job||' '||emp_rec.sal);

  	END LOOP;
  END;
  /
 ---------------------------------------------------------------------

 