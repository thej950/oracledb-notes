Aggregate or Group Functions
------------------------------
 - In Oracle aggregate function is a type of function which operates on specified column and it will returns a single row result 
 - Thses functions are mostly used in QUERY which contains GROUP BY clause in a SELECT statement where GROUP BY clause groups the rows as per specfied condition and AGGREGATE function performs aggregation on the groupe data 
  - It will returns a single row result based on groups of rows conditions 
  - Aggregate functions can be used in SELECT statement 
  - Aggregate functions can be used in HAVING clause as a condition 
  - it will returns one result per group as an output 
  - the group of rows can be the whole table or the rows split into many groups 

  Syntax of Oracle Aggregate Functions:
  -------------------------------------

   	GroupFunctionName (DISTINCT/ALL ColumnName)

   Guidelines to use
   -----------------
    - DISTINCT keyword is used to ignore duplicate values and function consider only non-duplicate values
    - ALL keyword is used to consider all values for the aggregate operation including duplicates 
    - CHAR, VARCHAR2, NUMBER, or DATE data types can be used for argument 
    - All group function except COUNT(*) function ignore NULLs. the NVL function can be a better option to substitute a value for NULLs.
    - No single row columns should be used with group functions in SELECT statment without GROUP BY clause. 

    Important aggregate functions
    ---------------------------------------------------------------------
     FUNCTIONS			DESCRIPTION   
    ---------------------------------------------------------------------
     1. AVG()			It returns an avarage value of give expression
     2. SUM()			it returns the sum of value of give expression
     3. MAX()			it returns maximum value of give expression
     4. MIN()			it returns minimum value of given expression
     5. COUNT() 		it returns total number of rows for the given expression
     6. STDDEV() 		it returns the standard deviation of the column 
     7. VARIANCE() 		it returns the variances 
    --------------------------------------------------------------------------

    Lets Do Practicles of using employee table
    --------------------------------------------------------

    step1: lets create a table of employee and insert some values into that table 

	     	CREATE TABLE employee (
			    EMPNO   NUMBER(4) PRIMARY KEY,
			    ENAME   VARCHAR2(30),
			    JOB     VARCHAR2(30),
			    MGR     NUMBER(4),
			    HIREDATE DATE,
			    SAL     NUMBER(7,2),
			    COMM    NUMBER(7,2),
			    DEPTNO  NUMBER(2)
			);

			-- Inserting data into the employee table
			INSERT INTO employee VALUES (7369, 'SMITH', 'CLERK', 7902, TO_DATE('17-DEC-80', 'DD-MON-YY'), 800, NULL, 20);
			INSERT INTO employee VALUES (7499, 'ALLEN', 'SALESMAN', 7698, TO_DATE('20-FEB-81', 'DD-MON-YY'), 1600, 300, 30);
			INSERT INTO employee VALUES (7521, 'WARD', 'SALESMAN', 7698, TO_DATE('22-FEB-81', 'DD-MON-YY'), 1250, 500, 30);
			INSERT INTO employee VALUES (7566, 'JONES', 'MANAGER', 7839, TO_DATE('02-APR-81', 'DD-MON-YY'), 2975, NULL, 20);
			INSERT INTO employee VALUES (7654, 'MARTIN', 'SALESMAN', 7698, TO_DATE('28-SEP-81', 'DD-MON-YY'), 1250, 1400, 30);
			INSERT INTO employee VALUES (7698, 'BLAKE', 'MANAGER', 7839, TO_DATE('01-MAY-81', 'DD-MON-YY'), 2850, NULL, 30);
			INSERT INTO employee VALUES (7782, 'CLARK', 'MANAGER', 7839, TO_DATE('09-JUN-81', 'DD-MON-YY'), 2450, NULL, 10);
			INSERT INTO employee VALUES (7788, 'SCOTT', 'ANALYST', 7566, TO_DATE('09-DEC-82', 'DD-MON-YY'), 3000, NULL, 20);
			INSERT INTO employee VALUES (7839, 'KING', 'PRESIDENT', NULL, TO_DATE('17-NOV-81', 'DD-MON-YY'), 5000, NULL, 10);
			INSERT INTO employee VALUES (7844, 'TURNER', 'SALESMAN', 7698, TO_DATE('08-SEP-81', 'DD-MON-YY'), 1500, NULL, 30);
			INSERT INTO employee VALUES (7876, 'ADAMS', 'CLERK', 7788, TO_DATE('12-JAN-83', 'DD-MON-YY'), 1100, NULL, 20);
			INSERT INTO employee VALUES (7900, 'JAMES', 'CLERK', 7698, TO_DATE('03-DEC-81', 'DD-MON-YY'), 950, NULL, 30);
			INSERT INTO employee VALUES (7902, 'FORD', 'ANALYST', 7566, TO_DATE('03-DEC-81', 'DD-MON-YY'), 3000, NULL, 20);
			INSERT INTO employee VALUES (7934, 'MILLER', 'CLERK', 7782, TO_DATE('23-JAN-82', 'DD-MON-YY'), 1300, NULL, 10);

	step2: check that table 

			SQL> select * from employee;

			     EMPNO ENAME                          JOB                                   MGR HIREDATE         SAL       COMM     DEPTNO
			---------- ------------------------------ ------------------------------ ---------- --------- ---------- ---------- ----------
			      7369 SMITH                          CLERK                                7902 17-DEC-80        800                    20
			      7499 ALLEN                          SALESMAN                             7698 20-FEB-81       1600        300         30
			      7521 WARD                           SALESMAN                             7698 22-FEB-81       1250        500         30
			      7566 JONES                          MANAGER                              7839 02-APR-81       2975                    20
			      7654 MARTIN                         SALESMAN                             7698 28-SEP-81       1250       1400         30
			      7698 BLAKE                          MANAGER                              7839 01-MAY-81       2850                    30
			      7782 CLARK                          MANAGER                              7839 09-JUN-81       2450                    10
			      7788 SCOTT                          ANALYST                              7566 09-DEC-82       3000                    20
			      7839 KING                           PRESIDENT                                 17-NOV-81       5000                    10
			      7844 TURNER                         SALESMAN                             7698 08-SEP-81       1500                    30
			      7876 ADAMS                          CLERK                                7788 12-JAN-83       1100                    20

			     EMPNO ENAME                          JOB                                   MGR HIREDATE         SAL       COMM     DEPTNO
			---------- ------------------------------ ------------------------------ ---------- --------- ---------- ---------- ----------
			      7900 JAMES                          CLERK                                7698 03-DEC-81        950                    30
			      7902 FORD                           ANALYST                              7566 03-DEC-81       3000                    20
			      7934 MILLER                         CLERK                                7782 23-JAN-82       1300                    10

			14 rows selected.

			SQL>


	step3: To get total average salary of employess here [select avg (sal) from employee;]

				SQL> select avg (sal) from employee;

				  AVG(SAL)
				----------
				2073.21429

				SQL>

	step4: To get avg sal from table using DISTINCT (which means filter out duplicate sal)

				SQL> select avg (distinct sal) from employee;

				AVG(DISTINCTSAL)
				----------------
				      2064.58333

				SQL>
	step5: To perform avg to comm column 

			SQL> select avg (comm) from employee;

			 AVG(COMM)
			----------
			733.333333

			SQL>
		- which means from above output there in table comm column may containe only 3 persons have values so them its combine all of the values and by 3 (which means 300+500+1400=2200 so 2200/3)
	step6: To dedivide with 4 value for comm columns values


			SQL> select sum(comm)/4 from employee;

			SUM(COMM)/4
			-----------
			        550

			SQL>

	step7: To make total of comm column [select sum(comm) from employee;]

	step8: To see maximum salary and minimum salary from table [select max(sal),min(sal) from employee; ] 



			SQL> select max(sal),min(sal) from employee;

			  MAX(SAL)   MIN(SAL)
			---------- ----------
			      5000        800

			SQL> 

	step9: To see how many dept from above tables perticularly on dept only 

			SQL> select count(distinct deptno) from employee;

			COUNT(DISTINCTDEPTNO)
			---------------------
			                    3

			SQL>

	step10: To check in the employee table commision is null or commission is not null

			SQL> select count(*) from employee where comm is null;

			  COUNT(*)
			----------
			        11

			SQL> select count(*) from employee where comm is not null;

			  COUNT(*)
			----------
			         3

			SQL>

	step11: To see from above table standard deviation from salary and commision

			SQL>  select stddev(sal),stddev(comm) from employee;

			STDDEV(SAL) STDDEV(COMM)
			----------- ------------
			 1182.50322   585.946528

			SQL>

	step12: To see from above table variances from salary and commision



			SQL> select variance(sal),variance(comm) from employee;

			VARIANCE(SAL) VARIANCE(COMM)
			------------- --------------
			   1398313.87     343333.333

			SQL>

	step13: To get department wise avg salary

			SQL> select deptno,avg(sal) from employee group by deptno;

			    DEPTNO   AVG(SAL)
			---------- ----------
			        30 1566.66667
			        10 2916.66667
			        20       2175

			SQL>
			- from above table we have 3 departments with average salary of each departments

	step14: Now i want to get only 10,20 departments only using having clause


			SQL> select deptno,avg(sal) from employee group by deptno having deptno in(10,20);

			    DEPTNO   AVG(SAL)
			---------- ----------
			        10 2916.66667
			        20       2175

			SQL>

			
			- to see in orderwise 


			SQL> select deptno,avg(sal) from employee group by deptno having deptno in(10,20) order by deptno;

			    DEPTNO   AVG(SAL)
			---------- ----------
			        10 2916.66667
			        20       2175

			SQL>

			- if salary greater than 1500 hundred 

			
			SQL> select deptno,avg(sal) from employee where sal>=1500 group by deptno having deptno in(10,20) order by deptno;

			    DEPTNO   AVG(SAL)
			---------- ----------
			        10       3725
			        20 2991.66667

			SQL>



